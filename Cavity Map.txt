class Result {

    /*
     * Complete the 'cavityMap' function below.
     *
     * The function is expected to return a STRING_ARRAY.
     * The function accepts STRING_ARRAY grid as parameter.
     */

    public static List<String> cavityMap(List<String> grid) {
        for(int i=1;i<grid.size()-1;i++)
{
    int len=grid.get(i).length()-1;
    for(int j=1;j<len;j++)
    {
        int cellUp=grid.get(i-1).charAt(j)-48;
        int cellDown=grid.get(i+1).charAt(j)-48;
        int cellLeft=grid.get(i).charAt(j-1)-48;
        int cellRight=grid.get(i).charAt(j+1)-48;
        int cell = grid.get(i).charAt(j)-48;

        if(cell>cellUp && cell>cellDown && cell>cellLeft && cell>cellRight)
            {
                char[] ch=grid.get(i).toCharArray();
                ch[j]='X';
                grid.remove(i);
                grid.add(i,String.valueOf(ch));
            }
    }
}